(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/pratyush/web2py/applications/music_library/controllers/default.py'
p4
sS'code'
p5
S'def index():#no explicit use, redirects to homepage or login page whichever is suitable\n    return dict(message=T(\'\'))\n\n#@auth.requires_login()\ndef user():#provides login\n    return dict(form=auth())\n\n\ndef download():#for providing download of files\n    import os\n    filename=os.path.join(request.folder,\'uploads/\',\'%s\' % request.args[0])\n    return response.stream(open(filename,\'rb\'))\n\ndef play():\n    musics=db(request.args(0)==db.music.id).select(db.music.ALL)\n    #musics=db().select(db.music.ALL, orderby=db.music.name)\n    return dict(musics=musics)\n\n@auth.requires_login()\t\ndef navigate():#provides smooth navigation\n    return dict()\n\n    \n\n@auth.requires_login()\ndef home():#homepage\n    musics=db().select(db.music.ALL, orderby=db.music.name)\n    return dict(musics=musics)\n\n@auth.requires_login()\ndef add():#function provides the upload of songs\n    #record= db.music(request.args(0)) or redirect(URL(\'index\'))\n    #url=URL(\'download\')\n    form = SQLFORM(db.music)\n    if form.accepts(request.vars):\n        response.flash = \'Success!\'\n    elif form.errors:\n        response.flash = \'Error adding new music\'\n    \n    return dict(form=form)\n\n@auth.requires_login()\t\ndef delete():#provides for deletion of songs\n    db(db.music.id==request.args(0)).delete()\n    redirect(URL(r=request, f="view"))\n\n\n@auth.requires_login()\ndef view():#function to view all the songs in the  database\n    musics=db().select(db.music.ALL, orderby=db.music.name)\n    return dict(musics=musics)\n\ndef search():    #function to search songs \n    name=TD(\'Search music name:\')\n    namebox=TD(INPUT(_id=\'music_name\',_name=\'music[name]\',_size=\'30\',_type=\'text\',requires=IS_NOT_EMPTY()),DIV(_class=\'auto_complete\',_id=\'music_name_auto_complete\'))   \n    submit=TD(INPUT(_type=\'submit\',_name=\'submit\',_value=\'Submit\'))\n\n    form=FORM(TABLE(TR(name,namebox,submit)))\n\n    musics=None\n\n    if form.accepts(request.vars,session):\n        search=request.vars[\'music[name]\']\n        musics=db(db.music.name.upper().like(\'%\'+search.upper()+\'%\')).select(db.music.ALL)\n    \n\n    return dict(form=form,musics=musics)\n\n\n@auth.requires_login()\ndef user_set():\n    return dict()\n\n@auth.requires_login()\t\ndef comment():\n    db.comment.user.default = auth.user.id\n    db.comment.user.default = db.comment.user.writable = False\n    t=request.args(0)\n    form  = SQLFORM(db.comment)\n    if form.accepts(request.vars):\n\t\tresponse.flash= \'comment added\'\n\t\tredirect(URL(r=request, f="comment"))\n    return dict(form=form)\n\n\n@auth.requires_login()\ndef view_comment():#function to view all the songs in the  database\n    comments=db().select(db.comment.ALL, orderby=db.comment.comment)\n    return dict(comments=comments)\n   \n@auth.requires_login()\ndef playlist():\n    db.playlist.User_id.default = auth.user.id\n    db.playlist.User_id.default = db.playlist.User_id.writable = False\n    t=request.args(0)\n    form  = SQLFORM(db.playlist)\n    if form.accepts(request.vars):\n\t\tresponse.flash= \'Song added\'\n\t\tredirect(URL(r=request, f="playlist"))\n    return dict(form=form)\n\n@auth.requires_login()\ndef view_playlist():#function to view all the songs in the  database\n    comments=db().select(db.playlist.ALL, orderby=db.playlist.Song)\n    return dict(comments=comments)\n\n@auth.requires_login()\ndef abuse():\n    db.abuse.User.default = auth.user.id\n    db.abuse.User.default = db.playlist.User.writable = False\n    t=request.args(0)\n    form  = SQLFORM(db.abuse)\n    if form.accepts(request.vars):\n\t\tresponse.flash= \'Song added\'\n\t\tredirect(URL(r=request, f="navigate"))\n    return dict(form=form)\n    \t\n\n\nresponse._vars=response._caller(abuse)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/pratyush/web2py/gluon/restricted.py", line 173, in restricted\n    exec ccode in environment\n  File "/home/pratyush/web2py/applications/music_library/controllers/default.py", line 120, in <module>\n  File "/home/pratyush/web2py/gluon/globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/pratyush/web2py/gluon/tools.py", line 1864, in f\n    return action(*a, **b)\n  File "/home/pratyush/web2py/applications/music_library/controllers/default.py", line 110, in abuse\n    db.abuse.User.default = db.playlist.User.writable = False\n  File "/home/pratyush/web2py/gluon/sql.py", line 1573, in __getattr__\n    return dict.__getitem__(self,key)\nKeyError: \'User\'\n'
p8
s.